 const createPost = async (data: PostFormType) => {
    // e.preventDefault()
    setIsCreatingPost(true)
    if (!title || !content! || !image) {
      toast.error("Por favor, preencha todos os campos obrigatórios", {
        autoClose: 2000,
        hideProgressBar: true,
      })
      setIsCreatingPost(false)
      return
    }

    const IMAGE_SIZE = image.size / 1024
    const LIMIT_SIZE = 5 * 1024

    console.log({
      imageSize: IMAGE_SIZE,
      limitSize: LIMIT_SIZE,
    })

    if (IMAGE_SIZE > LIMIT_SIZE) {
      toast.error("O tamanho da imagem deve ser inferior à 5MB", {
        autoClose: 2000,
        hideProgressBar: true,
      })
      setIsCreatingPost(false)
      return
    }

    try {
      const IMAGE_FOLDER = "images/"
      const downloadURL = await uploadImageToFirebaseStorage(
        image!!,
        IMAGE_FOLDER
      )

      const response = await fetch(`${url}/${API_URL.CREATE_POST}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          title: data.title,
          content: content,
          isHighlighted: isHighlighted,
          category: category,
          mainImage: downloadURL,
          author_id: userId!!,
          author_notes: authorNotes,
          tag: tagsArraay,
          latitude: coordinates ? coordinates?.latitude : null,
          longitude: coordinates ? coordinates?.longitude : null,
        }),
      })

      const { message } = await response.json()
      if (!response.ok) {
        toast.error(message, {
          position: "top-right",
          hideProgressBar: true,
          autoClose: 1000,
        })
      } else {
        toast.success(message, {
          position: "top-right",
          autoClose: 1000,
          hideProgressBar: true,
        })
        navigate("/posts")
      }
    } catch (error) {
      console.log(error)
    } finally {
      setIsCreatingPost(false)
      resetInputs()
    }
  }